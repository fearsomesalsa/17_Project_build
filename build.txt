У проекта всегда будет минимум 2 основные сборки. Конечно, может быть и больше, но основных всегда две.

1. Development
Сборка, предназначенная для использования во время разработки проекта. Для разработчиков
Когда мы выполняем ng serve, мы запускаем дев сборку
Но чтобы проект запускался на сервере, т.е. на хостинге, нам нужно использовать другой тип сборки - продакшен.

2. Production
Сборка, предназначенная для загрузки на сервер. Для пользователей веб-ресурса
При этой сборке убирается все лишнее, и код максимально сжимается. 

Хотя мы и можем запускать на сервере дев сборку, а на локальном компьютере прод сборку, это чаще всего не имеет никакого смысла.
Да, можно запускать у себя продакшен сборку на компьютере, чтобы убедиться, что все работает, и приложение компилируется без ошибок, но не более.

Чем обычно отличаются такие сборки?
Для дев сборки проект запускается чаще всего в том виде, как он есть. Т.е. происходит лишь минимальное преобразование файлов для запуска в браузере, например из TS в JS (т.к. браузер просто не воспринимает TS).
А вот в продакшен сбрке происходит максимальное сжатие файлов, ведь конечному пользователю не нужны исходники, его не волнует, читается там код или нет. Ему важно рабочее приложение. При этом которое быстро скачивается и быстро работает, а для этого происходит удаление всего лишнего, минификация файлов, деление их на частички (так называемые chanks - чанки) и т.д.

Сделаем продакшен сборку нашего проекта
Проанализируем все, что выводится в консоль после выполнения ng build
Слева находятся файлы, которые получаем на выходе
Справа две колонки с их размерами. Первый столбец - это initial размер, т.е. фактический размер файла. Второй столбец - размер файла, который мы получим на выходе после компиляции, т.к. они сжимаются. Это дает нам представление о том, сколько пользователю фактически придется загрузить Мб нашего приложения себе в браузер (это не учитывая картинки, шрифты и т.д. - только код).
При этом в конфиге angular.json по умолчанию есть настройки размеров приложения, которые мы можем контролировать. Если в процессе сборки Angular определяет, что размер приложения превысил эти ограничения, то выдает предупреждение либо ошибку.
Сейчас мы получили ошибку, что у нас есть ограничение в 1Мб исходных файлов, но мы превысили его, из-за чего наша сборка прервалась.
Предупреждение мы получаем, когда приложение составляет минимум 500Кб.

Чтобы скомпилировать наше приложение, нужно эти настройки исправить.
angular.json - configurations - production - budgets - раздел с type: 'initial'
"maximumWarning": "500kb" - согласно этим настройкам, когда наши исходники будут весить больше, чем 500Кб, мы получим предупреждение.
"maximumError": "1mb" - если все приложение будет весить больше 1Мб (еще в сыром виде, не преобразованном), то мы получим ошибку.

Когда у нас есть огромный проект, с котором мы работаем, возможно для нас это будет важно - контролировать тот размер приложения, который мы будет деплоить на хостинг. Несмотря на то, что на выходе мы получим 200Кб (например, как тут), эта информация все равно ценна для анализа, ведь именно оригинальный размер файлов определяет, насколько большое наше приложение, и возможно что-то лишнее можно выкинуть.
Если например мы используем несколько библиотек, и допустим подключаем бутстрап только ради того, чтобы показать 1 попап, то в этом нет никакого смысла, т.к. будет очень много зависимостей у бутстрапа для того, чтобы просто показать попап. Тогда лучше сделать его вручную.
И нет особой надобности в том, чтобы использовать несколько библиотек, как у нас 
